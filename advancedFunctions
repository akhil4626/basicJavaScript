//Working with the annonymus function

let c = function(x,y){
    let z = x+y;
    console.log(z);
    return z;
}

c(5,9);


//passing multiple functions as the arguments to one another


function fInFFunction(func,funct,functi,functio,x,y){
    let result = func(x,y);
    let result1 = funct(x,y);
    let result2 = functi(x,y);
    let result3 =functio(x,y);
    console.log("the result of the first given operation is"+ " " +result);
    console.log("the result of the second given operation is"+ " " +result1);
    console.log("the result of the second given operation is"+ " " +result2);
    console.log("the result of the second given operation is"+ " " +result3);

    return [result,result1,result2,result3];
}

function add(x,y){
    let z = x+y;
    console.log(z);

    return z;

}

function sub(x,y){
    let z = x-y;
    return z;
}

function mul(x,y){
    let z = x*y;
    return z;
}
function div(x,y){
    let z = x/y;
    return z;
}
add(5,6);
add(6,7);
add(7,8);
fInFFunction(div,mul,sub,add,5,6);


//multiple function to find the average function,highest number, lowest number



function fmsDelhi(f,fu,fun,x,y,z){
    let result = f(x,y,z);
    let result1 = fu(x,y,z);
    let result2 = fun(x,y,z);
    console.log("average of the given three numbers "+" "+result);
    // console.log("the result of the first function  fu is "+result1);
    // console.log("the result of the first function  fun is "+result2);
}

function average(a,b,c){
    let ko = a+b+c;
    let koj =ko/3;
console.log(koj);
return koj;
}
10,20,30     
function highestNumber(a,b,c){
    if((a>b)&&(a>c)){
        console.log(+a +" " +"is the greatest number of the given lot");
        return a;
    }
    else if((b>a)&&(b>c)){
        console.log(+b +" " +"is the greatest number of the given lot");
        return b;
    }
    else if((a===b) && (b===c) &&(a===c)){
        console.log(+a+"," +b+"," +c+" " +"All these three numbers are basically the same, so no point in trying to find which is the greatest number")
    }
    else{
        console.log(+c +" " +"is the greatest number of the given lot");
        return c;

    }

}

//10,20,30    

function leastNumber(a,b,c){
    if((a<b)&&(a<c)){
        console.log(+a +" " +"is the least number of the given lot");
        return a;
    }
    else if((b<a)&&(b<c)){
        console.log(+b +" " +"is the least number of the given lot");
        return b;
    }
    else if((a===b) && (b===c) &&(a===c)){
        console.log(+a+"," +b+"," +c+" " +"All these three numbers are basically the same, so no point in trying to find which is the least number")
    }
    else{
        console.log(+c +" " +"is the least number of the given lot");
        return c;

    }

}


fmsDelhi(average,highestNumber,leastNumber,1,2,3);


//function as an argument to another function

function zerodha(x){
    console.log("the given number "+x);
    console.log("  ");
    return function(a,b,c){
        po= a*b*c;
        avgOfThenumbers =po/x;
        console.log("the result of the entire operation is this  "+avgOfThenumbers);
        return avgOfThenumbers;
    }
}

zerodha(3)(1,1,1);



//function as an argument to another function


//function abc(){
    console.log("GT:Aava de. csk:poda dei.");
    return function(){
        let gt = "aava de";
        console.log("hello  world bro bharat chandra gada");
        console.log(gt);
        return gt;
    }
}


abc()();


//function accept a number we want to return a function that alsoacceps a number, we want to return in that function x times num

function acceptsNumber(x){
    return function(m){
       let  operation = m*x;
        console.log("the result of the operation is "+operation);
        return operation;
    }
}

acceptsNumber(3)(5);



//function accept a number we want to return a function that alsoacceps a number, we want to return in that function x times num another version

function acceptsNumber(x){
    return function(m){
       let  operation = m*x;
        console.log("the result of the operation is "+operation);
        return operation;
    }
}

const operationOnConst = acceptsNumber(10);
operationOnConst(2);



//function accept a number we want to return a function that alsoacceps a number, we want to return in that function x times num another version

function acceptsNumber(x){
    return function(m){
       let  operation = m*x;
       console.log("");

        console.log("the result of the operation is "+operation);
        console.log("");
        return operation;
    }
}

const operationOnConst = acceptsNumber(10);
operationOnConst(2);
operationOnConst(3);
operationOnConst(4);
operationOnConst(5);
operationOnConst(6);
operationOnConst(7);
operationOnConst(8);
operationOnConst(9);
operationOnConst(10);
operationOnConst(11);
operationOnConst(12);
operationOnConst(13);
operationOnConst(14);



//curlfying function

function checkingGENERALRanges(min,max){
return function(value){
    if((value>=min) && (value<=max)){
        console.log("yayy, you fit into the range perfectly");
        console.log("  ");
        return true;
    }
    else{
       console.log("no");
       console.log("  ");
       return false;

    }
}
}

const minAgeForMarraige = checkingGENERALRanges(26,35);
minAgeForMarraige(27);
minAgeForMarraige(22);
minAgeForMarraige(55);
minAgeForMarraige(22);
minAgeForMarraige(999);
minAgeForMarraige(988752);


const minMarksForQualyfingExamination = checkingGENERALRanges(35,100);
minMarksForQualyfingExamination(101)



//callback function
function doItTwice(func){
func();
func();}

function doWhatTwice(){
    console.log("eat, sleep, repeat")
}

doItTwice(doWhatTwice);


//callback function


function greeting(name) {
    console.log('Hello ' + name);
  }
  
  function processUserInput(callback) {
    var name = console.log('Please enter your name.');
    callback(name);
  }
  
  processUserInput(greeting);
  
  
  //call back function
  function doSomething(callback, num) {
    callback(num);
  }
  
  function printNumber(num) {
    console.log(num);
    
    
    
    
 hello = () => "Hello World!";



  //curlyfying function

//   function add(a) {
//     return function(b) {
//       return a + b;
//     };
//   }
  
//   console.log(add(2)(3)); // Output: 5


//self- invocation function

(function() {
    var secret = "This is a secret message.";
  console.log(secret)
    
  })();
  }
  
  doSomething(printNumber, 42); // Output: 42
  
  
  //arrow functions
  const add = (x,y) =>{let z = x+y; console.log(z);
return z;
}

add(3,4);


//immediatley invoked function expressions


(function addSub(x,y){
    let z = x +y;
    let a = x*y;
    console.log("the addition of two passed arguments is"+z);
    console.log("the multiplication of two passed agruments is"+a);
    return [z,a];
})(11,22);


//function grouping


let functionGroupingAsAnObject = {
  add: function add(x, y) {
    let a = x + y;
    console.log("the addition of given numbers is " + a);
    return a;
  },
  sub: function sub(x, y) {
    let b = x - y;
    console.log("the subtraction of given numbers is " + b);
    return b;
  },
  mul: function mul(x, y) {
    let c = x * y;
    console.log("the multiplication of given numbers is " + c);
    return c;
  },
  div: function div(x, y) {
    let d = x / y;
    console.log("the division of given numbers is " + d);
    return d;
  },
};

const result = functionGroupingAsAnObject.add(3, 4);
console.log(result);

const result1 = functionGroupingAsAnObject.sub(3, 4);
console.log(result1);

const result2 = functionGroupingAsAnObject.mul(3, 4);
console.log(result2);

const result3 = functionGroupingAsAnObject.div(3, 4);
console.log(result3);
